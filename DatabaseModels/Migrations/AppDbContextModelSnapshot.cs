// <auto-generated />
using System;
using DatabaseModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatabaseModels.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DatabaseModels.Models.CaChieu", b =>
                {
                    b.Property<long>("MaCaChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaCaChieu"));

                    b.Property<long>("MaLoaiHinh")
                        .HasColumnType("bigint");

                    b.Property<long>("MaPhim")
                        .HasColumnType("bigint");

                    b.Property<long>("SoCot")
                        .HasColumnType("bigint");

                    b.Property<long>("SoHang")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ThoiGianChieu")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaCaChieu");

                    b.HasIndex("MaLoaiHinh");

                    b.HasIndex("MaPhim");

                    b.ToTable("CaChieu");
                });

            modelBuilder.Entity("DatabaseModels.Models.Ghe", b =>
                {
                    b.Property<long>("MaGhe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaGhe"));

                    b.Property<long>("Cot")
                        .HasColumnType("bigint");

                    b.Property<long>("Hang")
                        .HasColumnType("bigint");

                    b.Property<long>("MaCaChieu")
                        .HasColumnType("bigint");

                    b.Property<long>("MaHoaDon")
                        .HasColumnType("bigint");

                    b.Property<long>("MaLoaiGhe")
                        .HasColumnType("bigint");

                    b.HasKey("MaGhe");

                    b.HasIndex("MaCaChieu");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaLoaiGhe");

                    b.HasIndex("Hang", "Cot", "MaCaChieu")
                        .IsUnique();

                    b.ToTable("Ghe");
                });

            modelBuilder.Entity("DatabaseModels.Models.HoaDon", b =>
                {
                    b.Property<long>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaHoaDon"));

                    b.Property<long>("MaNguoiDung")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ThoiGianDat")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DatabaseModels.Models.LoaiGhe", b =>
                {
                    b.Property<long>("MaLoaiGhe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaLoaiGhe"));

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TenLoaiGhe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaLoaiGhe");

                    b.ToTable("LoaiGhe");
                });

            modelBuilder.Entity("DatabaseModels.Models.LoaiHinh", b =>
                {
                    b.Property<long>("MaLoaiHinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaLoaiHinh"));

                    b.Property<string>("TenLoaiHinh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaLoaiHinh");

                    b.ToTable("LoaiHinh");
                });

            modelBuilder.Entity("DatabaseModels.Models.NguoiDung", b =>
                {
                    b.Property<long>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaNguoiDung"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MatKhauBam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaNguoiDung");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("DatabaseModels.Models.Phim", b =>
                {
                    b.Property<long>("MaPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaPhim"));

                    b.Property<float>("DanhGia")
                        .HasColumnType("real");

                    b.Property<long>("DoDai")
                        .HasColumnType("bigint");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaPhim");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("DatabaseModels.Models.Phim_TheLoai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("MaPhim")
                        .HasColumnType("bigint");

                    b.Property<long>("MaTheLoai")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MaTheLoai");

                    b.HasIndex("MaPhim", "MaTheLoai")
                        .IsUnique();

                    b.ToTable("Phim_TheLoai");
                });

            modelBuilder.Entity("DatabaseModels.Models.TheLoai", b =>
                {
                    b.Property<long>("MaTheLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MaTheLoai"));

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MaTheLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("DatabaseModels.Models.CaChieu", b =>
                {
                    b.HasOne("DatabaseModels.Models.LoaiHinh", "LoaiHinh")
                        .WithMany("CaChieu")
                        .HasForeignKey("MaLoaiHinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseModels.Models.Phim", "Phim")
                        .WithMany("CaChieu")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiHinh");

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("DatabaseModels.Models.Ghe", b =>
                {
                    b.HasOne("DatabaseModels.Models.CaChieu", "CaChieu")
                        .WithMany("Ghe")
                        .HasForeignKey("MaCaChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseModels.Models.HoaDon", "HoaDon")
                        .WithMany("Ghe")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseModels.Models.LoaiGhe", "LoaiGhe")
                        .WithMany("Ghe")
                        .HasForeignKey("MaLoaiGhe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaChieu");

                    b.Navigation("HoaDon");

                    b.Navigation("LoaiGhe");
                });

            modelBuilder.Entity("DatabaseModels.Models.HoaDon", b =>
                {
                    b.HasOne("DatabaseModels.Models.NguoiDung", "NguoiDung")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DatabaseModels.Models.Phim_TheLoai", b =>
                {
                    b.HasOne("DatabaseModels.Models.Phim", "Phim")
                        .WithMany("P_TL")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseModels.Models.TheLoai", "TheLoai")
                        .WithMany("P_TL")
                        .HasForeignKey("MaTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phim");

                    b.Navigation("TheLoai");
                });

            modelBuilder.Entity("DatabaseModels.Models.CaChieu", b =>
                {
                    b.Navigation("Ghe");
                });

            modelBuilder.Entity("DatabaseModels.Models.HoaDon", b =>
                {
                    b.Navigation("Ghe");
                });

            modelBuilder.Entity("DatabaseModels.Models.LoaiGhe", b =>
                {
                    b.Navigation("Ghe");
                });

            modelBuilder.Entity("DatabaseModels.Models.LoaiHinh", b =>
                {
                    b.Navigation("CaChieu");
                });

            modelBuilder.Entity("DatabaseModels.Models.NguoiDung", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("DatabaseModels.Models.Phim", b =>
                {
                    b.Navigation("CaChieu");

                    b.Navigation("P_TL");
                });

            modelBuilder.Entity("DatabaseModels.Models.TheLoai", b =>
                {
                    b.Navigation("P_TL");
                });
#pragma warning restore 612, 618
        }
    }
}
